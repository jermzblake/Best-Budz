{"version":3,"sources":["utils/tokenService.js","utils/diaryService.js","utils/userService.js","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","utils/formHelpers.js","components/Checkbox/Checkbox.jsx","components/Select/Select.jsx","components/DiaryForm/DiaryForm.jsx","pages/EntryFormPage/EntryFormPage.jsx","components/DiaryEntries/DiaryEntries.jsx","pages/DiaryPage/DiaryPage.jsx","components/UpdateForm/UpdateForm.jsx","pages/UpdatePage/UpdatePage.jsx","pages/LandingPage/LandingPage.jsx","components/NavBar/NavBar.jsx","pages/App/App.js","reportWebVitals.js","index.js"],"names":["functions","setToken","token","localStorage","setItem","getToken","getUserFromToken","JSON","parse","atob","split","user","removeToken","removeItem","getItem","exp","Date","now","BASE_URL","ENTRY_URL","index","fetch","method","headers","tokenService","then","res","json","createDiary","options","body","stringify","createEntry","entry","deleteEntry","_id","getEntry","entryUrl","updateEntry","id","signup","Headers","ok","Error","getUser","logout","login","creds","SignupForm","state","name","email","password","passwordConf","handleChange","e","props","updateMessage","setState","target","value","handleSubmit","a","preventDefault","userService","handleSignup","diaryService","diary","updateDiary","history","push","message","this","className","onSubmit","type","placeholder","onChange","disabled","isFormInvalid","to","Component","SignupPage","msg","LoginPage","pw","handleSignupOrLogin","alert","positiveEffects","negativeEffects","flavours","types","rating","intervals","Checkbox","choices","handleInputChange","labelFor","label","checked","length","map","choice","idx","Object","keys","values","Select","htmlFor","option","todayDate","toISOString","slice","DiaryForm","formRef","React","createRef","current","checkValidity","handlePositiveChange","event","newEffectArray","effect","handleNegativeChange","handleFlavourChange","newFlavourArray","addEntry","flavour","onsetTime","strain","comments","date","formInvalid","ref","required","pattern","htmlfor","onClick","EntryFormPage","DiaryEntries","toggle","nr","modalNumber","noTimeDate","handleDelete","makeList","arr","newarr","forEach","obj","join","modal14","isOpen","centered","color","DiaryPage","entries","reverse","key","UpdateForm","findEntryState","match","params","catch","error","console","log","for","rows","UpdatePage","LandingPage","landing","NavBar","nav","handleLogout","activeClassName","App","loadDiaries","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.942ff7f9.chunk.js","sourcesContent":["const functions = {\n  setToken,\n  getToken,\n  getUserFromToken,\n  removeToken\n};\n\nexport default functions\n\nfunction setToken(token) {\n    localStorage.setItem('token', token);\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken () {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}","import tokenService  from './tokenService';\n// import {getToken} from './tokenService';\n\nconst BASE_URL = '/api/diaries/';\nconst ENTRY_URL = '/api/entries/';\n\n// eslint-disable-next-line\nconst functions = {\n    index,\n    createDiary,\n    createEntry,\n    deleteEntry,\n    getEntry,\n    updateEntry,\n};\n\nexport default functions\n  \nfunction index() {\n    return fetch(BASE_URL, {\n        method: 'GET',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer ' + tokenService.getToken()\n          }\n    }).then(res => res.json());\n}\n  \nfunction createDiary(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': 'Bearer ' + tokenService.getToken()\n      },\n      body: JSON.stringify(user)\n    };\n    return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction createEntry(entry) {\n    const options = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': 'Bearer ' + tokenService.getToken()\n        },\n        body: JSON.stringify(entry)\n    };\n    return fetch(ENTRY_URL, options).then(res => res.json());  \n}\n\nfunction deleteEntry(entry) {\n    const options = {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': 'Bearer ' + tokenService.getToken()\n        },\n        body: JSON.stringify(entry)\n    };\n    return fetch(`${ENTRY_URL}/${entry._id}`, options).then(res => res.json());  \n}\n\nfunction getEntry(entryUrl) {\n    return fetch(`${ENTRY_URL}/${entryUrl}`, {\n        method: 'GET',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer ' + tokenService.getToken()\n          }\n    }).then(res => res.json());\n}\n\nfunction updateEntry(entry) {\n    const options = {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': 'Bearer ' + tokenService.getToken()\n        },\n        body: JSON.stringify(entry)\n    };\n    return fetch(`${ENTRY_URL}/${entry.id}`, options).then(res => res.json());  \n} ","import tokenService from './tokenService'\n\nconst BASE_URL = '/api/users/';\n\nconst functions = {\n  signup,\n  getUser,\n  logout,\n  login\n}; \n\nexport default functions\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('There was an error - possibly Email already taken!');\n  })\n   // Parameter destructuring!\n   .then(({ token }) => {\n    tokenService.setToken(token);\n   });\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport diaryService from '../../utils/diaryService';\nimport userService from '../../utils/userService';\n\nclass SignupForm extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        password: '',\n        passwordConf: ''\n    };\n\n    handleChange = (e) => {\n        this.props.updateMessage('');\n        this.setState({\n          // Using ES2015 Computed Property Names\n          [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          await userService.signup(this.state);\n          // Let <App> know a user has signed up!\n          this.props.handleSignup();\n          // Initialize the Dank Diary and set it to App's state\n          await diaryService.createDiary(this.props.user).then(diary=> this.props.updateDiary(diary))\n          // Successfully signed up - show root page\n          this.props.history.push('/dank-diary');\n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          this.props.updateMessage(err.message);\n        }\n    }\n\n    isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n    }\n\n  render() {\n    return (\n      <div>\n        <header className=\"header-footer\">Sign Up</header>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn\" disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\n              <Link to='/' className=\"Link\">Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default SignupForm; ","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './SignupPage.css';\n\nclass SignupPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {message: ''}\n    }\n    \n    updateMessage = (msg) => {\n        this.setState({message: msg});\n    }\n    \n    render() {\n        return (\n          <div className='SignupPage'>\n            <SignupForm {...this.props} updateMessage={this.updateMessage} />\n            <p>{this.state.message}</p>\n          </div>\n        );\n    }\n}\n\nexport default SignupPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './LoginPage.css';\nimport userService from '../../utils/userService';\n\nclass LoginPage extends Component {\n\n    state = {\n        email: '',\n        pw: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n          // Using ES2015 Computed Property Names\n          [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          await userService.login(this.state);\n           this.props.handleSignupOrLogin();\n           this.props.history.push('/');\n        } catch (err) {\n          // Should use a modal or toast in your apps instead of alert***\n          alert('Invalid Credentials!');\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"LoginPage\">\n                <header className=\"header-footer\">Log In</header>\n                <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n                <div className=\"form-group\">\n                    <div className=\"col-sm-12\">\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"col-sm-12\">\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"col-sm-12 text-center\">\n                    <button className=\"btn\">Log In</button>&nbsp;&nbsp;&nbsp;\n                    <Link to='/' className=\"Link\">Cancel</Link>\n                    </div>\n                </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;","// Form options\nexport let positiveEffects = [\"Euphoria\", \"Body High\", \"Calm\", \"Uplifting\", \"Sociable\", \"Energetic\", \"Giggly\", \"Creative\", \"Relaxed\", \"Sleepy\", \"Clear Headed\", \"Invigorating\", \"None\"]\nexport let negativeEffects = [\"Red Eyes\", \"Dry Mouth\", \"Headache\", \"Sleeplessness\", \"Anxious\", \"None\"]\nexport let flavours = [\"Fruity\", \"Earthy\", \"Woody\", \"Citrus\", \"Spicy\", \"Skunk\", \"Cheese\", \"Floral\", \"Tonic\", \"Sweet\", \"None\"]\nexport let method = [\"Dried Flower\", \"Pill\", \"Oil\", \"Beverage\", \"Edible\", \"Other\"]\nexport let types = [\"Sativa\", \"Indica\", \"Hybrid\"]\nexport let rating = [\"☆☆☆☆☆\", \"★☆☆☆☆\", \"★★☆☆☆\", \"★★★☆☆\", \"★★★★☆\", \"★★★★★\"]\nexport let intervals = [\"Immediate\", \"< 30mins\", \"30mins > 60mins\", \"30mins > 60mins\", \"90mins > 120mins\", \"120mins > 180mins\", \"> 180mins\"]\n\n// Form initial state functions\nexport function positiveInitialState() {\n    const effectArray = positiveEffects.map(\n      (effect) => ({ [effect]: false })\n    );\n    return {positiveEffects: effectArray};\n  }\n\nexport function negativeInitialState() {\n    const effectArray = negativeEffects.map(\n      (effect) => ({ [effect]: false })\n    );\n    return {negativeEffects: effectArray};\n}\n\nexport function flavourInitialState() {\n    const flavourArray = flavours.map(\n      (flavour) => ({ [flavour]: false })\n    );\n    return {flavours: flavourArray};\n  }","import React from 'react';\nimport '../Checkbox/Checkbox.css'\n\nexport default function Checkbox({\n    choices,\n    labelFor,\n    label,\n    checked,\n    handleInputChange\n  }) {\n      if (choices && choices.length > 0){\n          return (\n            <>\n                {choices.map((choice, idx) => (\n                    <label key={idx} className=\"checkbox-container\">\n                        &lt; {Object.keys(choice)[0]}&nbsp;\n                        <input type=\"checkbox\" name={Object.keys(choice)[0]} checked={Object.values(choice)[0]} onChange={handleInputChange} />\n                        <span className=\"checkmark\"></span>\n                    </label>\n                ))}\n            </>\n          )\n      }\n      return null;\n  }\n\n","import React from 'react';\nimport '../Select/Select.css'\n\nexport default function Select({\n    options,\n    labelFor,\n    label,\n    value,\n    handleChange\n  }) {\n      if(options && options.length > 0){\n        return (\n          <label htmlFor={labelFor}>\n            {label}\n            {/* not sure why DD suggested value={value} in select tag. unless you find use for it, keep it out */}\n          <select className=\"custom-select border-none shadow-none select\" name={labelFor} onChange={handleChange}>  \n            {options.map((option, idx) => (\n              <option key={idx} value={option}>{option}</option>\n            ))}\n          </select>\n      </label>\n        );\n      }\n      return null\n  }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport diaryService from '../../utils/diaryService';\n// Form variables/state\nimport { intervals, rating, method, types, positiveInitialState,negativeInitialState, flavourInitialState } from '../../utils/formHelpers';\n// Form components\nimport Checkbox from '../Checkbox/Checkbox';\nimport Select from '../Select/Select';\n\n\nconst todayDate = new Date().toISOString().slice(0,10);\n\nclass DiaryForm extends Component {\n    constructor() {\n        super();\n        this.state= {\n            ...positiveInitialState(),\n            ...negativeInitialState(),\n            ...flavourInitialState(),\n            method: 'Dried Flower',\n            rating: \"☆☆☆☆☆\",\n            onsetTime: 'Immediate',\n            strain: '',\n            comments: '',\n            type: 'Sativa',\n            date: todayDate,\n            //track validity of form\n            formInvalid: true\n        }\n    }\n\n    formRef = React.createRef();\n\n    handleChange = (e) => {\n        this.props.updateMessage('');\n        this.setState({\n          // Using ES2015 Computed Property Names\n          [e.target.name]: e.target.value,\n          formInvalid: !this.formRef.current.checkValidity()  //update using the formRef\n        });\n    }\n   \n    // Can i make these handlers one function? pass the array as an argument?\n    handlePositiveChange = (event) => {\n        const target = event.target;\n        const name = target.name;\n\n        const newEffectArray = this.state.positiveEffects.map((effect) => {\n            if(Object.keys(effect)[0] === name){\n                if(effect[name] === false){\n                effect[name] = true\n                }else{effect[name] = false}\n            }\n            return effect\n        })\n\n        this.setState({\n        positiveEffects: newEffectArray,\n        });\n    }\n\n    handleNegativeChange = (event) => {\n        const target = event.target;\n        const name = target.name;\n\n        const newEffectArray = this.state.negativeEffects.map((effect) => {\n            if(Object.keys(effect)[0] === name){\n                if(effect[name] === false){\n                effect[name] = true\n                }else{effect[name] = false}\n            }\n            return effect\n        })\n\n        this.setState({\n        negativeEffects: newEffectArray,\n        });\n    }\n\n    handleFlavourChange = (event) => {\n        const target = event.target;\n        const name = target.name;\n\n        const newFlavourArray = this.state.flavours.map((effect) => {\n            if(Object.keys(effect)[0] === name){\n                if(effect[name] === false){\n                effect[name] = true\n                }else{effect[name] = false}\n            }\n            return effect\n        })\n\n        this.setState({\n        flavours: newFlavourArray,\n        });\n    }\n\n    addEntry = async(e) => {\n        e.preventDefault();\n        if (!this.formRef.current.checkValidity()) return;  // Do nothing if the form is invalid\n        await diaryService.createEntry(this.state).then(diary=> this.props.updateDiary(diary));\n        this.props.history.push('/dank-diary');\n    }\n\n    render(){\n        return (\n            <section>\n                <div className=\"container\">\n                    <h2>Consumption Entry</h2>\n                    <hr />\n                    <form ref={this.formRef} onSubmit={this.addEntry}>\n                        <label>\n                            <span>DATE</span>\n                            <input type='date' name='date' className=\"form-control shadow-none select\" value={this.state.date} onChange={this.handleChange} />\n                        </label>\n                        <label>\n                            <span>STRAIN</span>\n                            <input \n                                type=\"text\" \n                                name='strain' \n                                className=\"form-control shadow-none\" \n                                value={this.state.strain} \n                                onChange={this.handleChange} \n                                //  these two additional props set constraints *\n                                required\n                                pattern=\".{2,}\"\n                            />\n                        </label>\n                        <Select\n                            options={types}\n                            label=\"TYPE\"\n                            labelFor=\"type\"\n                            value=\"\"\n                            handleChange={this.handleChange}\n                        />\n                        <Select\n                            options={rating}\n                            label=\"RATING\"\n                            labelFor=\"rating\"\n                            value=\"\"\n                            handleChange={this.handleChange}\n                        />\n                        <Select\n                            options={method}\n                            label=\"METHOD\"\n                            labelFor=\"method\"\n                            value=\"\"\n                            handleChange={this.handleChange}\n                        />\n                        <Select\n                            options={intervals}\n                            label=\"ONSET TIME\"\n                            labelFor=\"onsetTime\"\n                            value=\"\"\n                            handleChange={this.handleChange}\n                        />\n                        <hr/>\n                        <h3>POSITIVE EFFECTS</h3>\n                        <Checkbox \n                            choices={this.state.positiveEffects}\n                            label=\"Positive Effects\"\n                            labelFor=\"positiveEffects\"\n                            handleInputChange={this.handlePositiveChange}\n                        />\n                        <hr/>\n                        <h3>NEGATIVE EFFECTS</h3>                        \n                        <Checkbox \n                            choices={this.state.negativeEffects}\n                            label=\"Negative Effects\"\n                            labelFor=\"negativeEffects\"\n                            handleInputChange={this.handleNegativeChange}\n                        />\n                        <hr/>\n                        <h3>FLAVOURS</h3>\n                        <Checkbox \n                            choices={this.state.flavours}\n                            label=\"Flavour\"\n                            labelFor=\"flavour\"\n                            handleInputChange={this.handleFlavourChange}\n                        />\n                        <hr/>\n                        <div className=\"row form-group\">\n                            <label htmlfor=\"comments\">COMMENTS</label>\n                            <textarea name='comments' className=\"form-control shadow-none\" id=\"comments\" value={this.state.comments} placeholder='How you feeling champ?' onChange={this.handleChange}/>\n                        </div>\n                        <button className=\"btn\" onClick={this.addEntry} disabled={this.state.formInvalid}>ADD ENTRY</button>&nbsp;&nbsp;\n                        <Link to='/' className=\"Link\">Cancel</Link>\n                    </form>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default DiaryForm;","import React, {Component} from 'react';\nimport DiaryForm from '../../components/DiaryForm/DiaryForm';\n///import css\n\nclass EntryFormPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {message: ''}\n    }\n\n    updateMessage = (msg) => {\n        this.setState({message: msg});\n    }\n\n    render() {\n        return (\n            <div className=\"EntryFormPage\">\n                <DiaryForm {...this.props} updateMessage={this.updateMessage} />\n                <p>{this.state.message}</p>\n            </div>\n        )\n    }\n}\n\nexport default EntryFormPage;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport diaryService from '../../utils/diaryService';\nimport '../DiaryEntries/DiaryEntries.css'\n// Material Design Bootstrap 4 React\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n\n\n\nclass DiaryEntries extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal14: false\n        }\n    }\n\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr\n        this.setState({\n          [modalNumber]: !this.state[modalNumber]\n        });\n    }\n\n    date = this.props.entry.date\n    noTimeDate = this.date.slice(0,10);\n\n    handleDelete = async (e) => {\n        // e.preventDefault();\n        await diaryService.deleteEntry(this.props.entry).then(diary => this.props.updateDiary(diary));\n        this.props.history.push('/dank-diary');\n    }\n\n    makeList = (arr) => {\n        let newarr = []\n        arr.forEach(obj => {\n            if(Object.values(obj)[0] === true) {\n                newarr.push(Object.keys(obj)[0])\n            }\n        })\n        let list = newarr.join(', ')\n        return list\n    }\n\n    render() {\n        return (\n            <MDBContainer>\n                <div onClick={this.toggle(14)} className=\"list-group-item pointer list-group-item-action\">\n                    <div className=\"d-flex w-100 justify-content-between\">\n                        <h5 className=\"mb-2\"><span className=\"strain\">{this.props.entry.strain}</span>&nbsp; | &nbsp;{this.props.entry.rating}</h5>\n                        <small className=\"date\">{this.noTimeDate}</small>\n                    </div>\n                    <div className=\"larger-device\">\n                        <p className=\"mb-0\"><span className=\"pvefx\">Positive Effects:</span> {this.makeList(this.props.entry.positiveEffects)} &nbsp;&nbsp;|&nbsp;&nbsp; <span className=\"nvefx\">Negative Effects:</span> {this.makeList(this.props.entry.negativeEffects)} </p>\n                    </div>\n                    <div className=\"smaller-device\">\n                        <p className=\"mb-1\"><span className=\"pvefx\">Positive Effects:</span> {this.makeList(this.props.entry.positiveEffects)}</p> \n                        <p><span className=\"nvefx\">Negative Effects:</span> {this.makeList(this.props.entry.negativeEffects)} </p>\n                    </div>\n                    <small className=\"text-muted\">{this.props.entry.type}</small>\n                </div>\n                <MDBModal isOpen={this.state.modal14} toggle={this.toggle(14)} className=\"modal\" centered>\n                    <MDBModalHeader toggle={this.toggle(14)}>\n                        <div className=\"larger-device\"><span className=\"strain\">{this.props.entry.strain }</span>&nbsp;- &nbsp;<span className=\"text-muted\">{this.props.entry.type}</span> |&nbsp;&nbsp;{this.props.entry.rating}</div>\n                        <div className=\"smaller-device mb-0\"><p><span className=\"strain\">{this.props.entry.strain }</span>&nbsp;- &nbsp;<span className=\"text-muted\">{this.props.entry.type}</span></p><p>{this.props.entry.rating}</p></div>\n                    </MDBModalHeader>\n                    <MDBModalBody>\n                        <div className=\"container-fluid\">\n                            <div className=\"row categories\">\n                                <div className=\"col text-center\">Method</div>\n                                <div className=\"col text-center\">Flavours/Aromas</div>\n                            </div>\n                                <div className=\"row\">\n                                    <div className=\"col-6 text-center\">{this.props.entry.method}</div>\n                                    <div className=\"col text-center\">{this.makeList(this.props.entry.flavours)}</div>\n                                </div>\n                            <br/>\n                            <div className=\"row\">\n                                <div className=\"col mr-auto ml-auto text-center\">\n                                    <strong>Onset</strong> ⌛: {this.props.entry.onsetTime}\n                                </div>\n                            </div><hr/>\n                            <div className=\"row\">\n                                <div className=\"col\"><span className=\"pvefx\">Positive Effects: </span>{this.makeList(this.props.entry.positiveEffects)}</div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col mr-auto\"><span className=\"nvefx\">Negative Effects: </span>{this.makeList(this.props.entry.negativeEffects)}</div>\n                            </div>\n\n                            <br/>\n                            <div className=\"comments\">\n                                {this.props.entry.comments}\n                            </div>\n                        </div>\n                    </MDBModalBody>\n                    <MDBModalFooter>\n                        <MDBBtn color=\"danger\" className=\"modal-delete-btn\" onClick={this.handleDelete}>Delete</MDBBtn>\n                        <Link to={\"/edit/\" + this.props.entry._id} color=\"primary\" className=\"btn\">Update</Link>\n                    </MDBModalFooter>\n                </MDBModal>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default DiaryEntries;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DiaryEntries from '../../components/DiaryEntries/DiaryEntries';\nimport '../DiaryPage/DiaryPage.css';\n\n\n\nfunction DiaryPage(props) {\n            if (props.diary.entries && props.diary.entries.length > 0 ){\n                return (\n                    <>\n                        <header>{props.user.name}'s Dank Diary</header>\n                        <div className=\"list-group\">\n                        {props.diary.entries.slice(0).reverse().map((entry, idx) => (\n                            <DiaryEntries \n                                entry={entry}\n                                updateDiary={props.updateDiary}\n                                {...props}\n                                key={idx}\n                            />\n                        ))}\n                        </div>\n                    </>\n                )\n            }\n            return (\n                <>\n                    <header>{props.user.name}'s Dank Diary</header>\n                    <div className=\"container\">\n                        <Link to=\"entry-form\" className=\"Link entry-link\">You have no entries. Click here to create one.</Link>\n                    </div>\n                </>\n            )\n\n}\n\nexport default DiaryPage","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport diaryService from '../../utils/diaryService';\n// Form variables/state\nimport { intervals, rating, method, types, } from '../../utils/formHelpers';\n// Form components\nimport Checkbox from '../Checkbox/Checkbox';\nimport Select from '../Select/Select';\n\nclass UpdateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            positiveEffects: '',\n            negativeEffects: '',\n            flavours: '',\n            method: 'Dried Flower',\n            rating: '',\n            onsetTime: 'Immediate',\n            strain: '',\n            comments: '',\n            type: 'Sativa', \n        }\n    }\n\n    findEntryState = async() => {\n        diaryService.getEntry(this.props.match.params.id)\n        .then(entry => {\n            this.setState({\n                method: entry.method,\n                rating: entry.rating,\n                onsetTime: entry.onsetTime,\n                strain: entry.strain,\n                type: entry.type,\n                comments: entry.comments,\n                positiveEffects: entry.positiveEffects,\n                negativeEffects: entry.negativeEffects,\n                flavours: entry.flavours,\n                id: entry._id\n            })   \n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    componentDidMount() {\n        return this.findEntryState();\n    }\n\n    handleChange = (e) => {\n        this.props.updateMessage('');\n        this.setState({\n          // Using ES2015 Computed Property Names\n          [e.target.name]: e.target.value,\n        });\n    }\n\n    handlePositiveChange = (event) => {\n        const target = event.target;\n        const name = target.name;\n\n        const newEffectArray = this.state.positiveEffects.map((effect) => {\n            if(Object.keys(effect)[0] === name){\n                if(effect[name] === false){\n                effect[name] = true\n                }else{effect[name] = false}\n            }\n            return effect\n        })\n\n        this.setState({\n        positiveEffects: newEffectArray,\n        });\n    }\n\n    handleNegativeChange = (event) => {\n        const target = event.target;\n        const name = target.name;\n\n        const newEffectArray = this.state.negativeEffects.map((effect) => {\n            if(Object.keys(effect)[0] === name){\n                if(effect[name] === false){\n                effect[name] = true\n                }else{effect[name] = false}\n            }\n            return effect\n        })\n\n        this.setState({\n        negativeEffects: newEffectArray,\n        });\n    }\n\n    handleFlavourChange = (event) => {\n        const target = event.target;\n        const name = target.name;\n\n        const newFlavourArray = this.state.flavours.map((effect) => {\n            if(Object.keys(effect)[0] === name){\n                if(effect[name] === false){\n                effect[name] = true\n                }else{effect[name] = false}\n            }\n            return effect\n        })\n\n        this.setState({\n        flavours: newFlavourArray,\n        });\n    }\n\n    updateEntry = async(e) => {\n        e.preventDefault();\n        await diaryService.updateEntry(this.state).then(diary=> this.props.updateDiary(diary));\n        this.props.history.push('/dank-diary');\n    }\n\n    render() {\n        return (\n            <section>\n                <div className=\"container\">\n                    <h2>Update Consumption Entry</h2>\n                    <hr />\n                    <form ref={this.formRef} onSubmit={this.updateEntry}>\n                        <label>\n                            <span>STRAIN</span>\n                            <input \n                                type=\"text\" \n                                name='strain' \n                                className=\"form-control shadow-none\" \n                                value={this.state.strain} \n                                onChange={this.handleChange} \n                            />\n                        </label>\n                        <Select\n                            options={types}\n                            label=\"TYPE\"\n                            labelFor=\"type\"\n                            value=\"\"\n                            handleChange={this.handleChange}\n                        />\n                        <Select\n                            options={rating}\n                            label=\"RATING\"\n                            labelFor=\"rating\"\n                            value=\"\"\n                            handleChange={this.handleChange}\n                        />\n                        <Select\n                            options={method}\n                            label=\"METHOD\"\n                            labelFor=\"method\"\n                            value=\"\"\n                            handleChange={this.handleChange}\n                        />\n                        <Select\n                            options={intervals}\n                            label=\"ONSET TIME\"\n                            labelFor=\"onsetTime\"\n                            value=\"\"\n                            handleChange={this.handleChange}\n                        />\n                        <hr/>\n                        <h3>POSITIVE EFFECTS</h3>\n                        <Checkbox \n                            choices={this.state.positiveEffects}\n                            label=\"Positive Effects\"\n                            labelFor=\"positiveEffects\"\n                            handleInputChange={this.handlePositiveChange}\n                        />\n                        <hr/>\n                        <h3>NEGATIVE EFFECTS</h3>                        \n                        <Checkbox \n                            choices={this.state.negativeEffects}\n                            label=\"Negative Effects\"\n                            labelFor=\"negativeEffects\"\n                            handleInputChange={this.handleNegativeChange}\n                        />\n                        <hr/>\n                        <h3>FLAVOURS</h3>\n                        <Checkbox \n                            choices={this.state.flavours}\n                            label=\"Flavour\"\n                            labelFor=\"flavour\"\n                            handleInputChange={this.handleFlavourChange}\n                        />\n                        <hr/>\n                        <div className=\"row form-group\">\n                            <label for=\"comments\">COMMENTS</label>\n                            <textarea name='comments' className=\"form-control shadow-none\" id=\"comments\" rows=\"4\" value={this.state.comments} placeholder='How you feeling champ?' onChange={this.handleChange}/>\n                        </div>\n                        <button onClick={this.updateEntry}>UPDATE ENTRY</button>&nbsp;&nbsp;\n                        <Link to='/dank-diary' className=\"Link\">Cancel</Link>\n                    </form>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default UpdateForm;","import React, {Component} from 'react';\nimport UpdateForm from '../../components/UpdateForm/UpdateForm';\n\nclass UpdatePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {message: ''}\n    }\n\n    updateMessage = (msg) => {\n        this.setState({message: msg});\n    }\n\n    render() {\n        return (\n            <div className=\"EntryFormPage\">\n                <UpdateForm {...this.props} updateMessage={this.updateMessage} />\n                <p>{this.state.message}</p>\n            </div>\n        )\n    }\n}\n\nexport default UpdatePage;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../LandingPage/LandingPage.css';\n\nconst LandingPage = (props) => {\n    let landing = props.user ?\n        <div>\n            <Link to=\"/dank-diary\" className=\"Link landing-link\">Welcome, {props.user.name}! Check out your Dank Diary!</Link>\n        </div>\n        :\n        <div>\n            <Link to=\"/login\" className=\"Link landing-link\">Welcome, Log In</Link>\n        </div>;\n\n    return (\n        <div className=\"landing\">\n            {landing}\n        </div>\n    )\n}\n\nexport default LandingPage;","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport './NavBar.css';\n\n\nconst NavBar = (props) => {\n    let nav = props.user ?\n      <div>\n        <Link to='/login' className='NavBar-link' onClick={props.handleLogout}>LOG OUT</Link>\n        &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n        <span className='NavBar-welcome'>WELCOME, {props.user.name}</span>\n        <NavLink to='/entry-form' className='NavBar-link' activeClassName='selected'><strong>+</strong>ADD ENTRY</NavLink>\n      </div>\n      :\n      <div>\n        <NavLink to='/login' className='NavBar-link' activeClassName=\"selected\">LOG IN</NavLink>\n        &nbsp;&nbsp;|&nbsp;&nbsp;\n        <NavLink to='/signup' className='NavBar-link' activeClassName=\"selected\">SIGN UP</NavLink>\n      </div>;\n\n    return (\n      <div className='navbar fixed-top custom-nav'>\n        {nav}\n      </div>\n    );\n};\n\n  export default NavBar; \n","import React, { Component } from 'react';\nimport './App.css';\n//import React Routes\nimport { Route, Switch, Redirect } from 'react-router-dom';\n// import Pages\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport EntryFormPage from '../EntryFormPage/EntryFormPage';\nimport DiaryPage from '../DiaryPage/DiaryPage';\nimport UpdatePage from '../UpdatePage/UpdatePage';\nimport LandingPage from '../LandingPage/LandingPage';\n//import Components\nimport NavBar from '../../components/NavBar/NavBar';\n// Utilities\nimport userService from '../../utils/userService';\nimport diaryService from '../../utils/diaryService';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state= {\n      user: userService.getUser(),\n      diary: null,\n    }\n  }\n\nhandleLogout = () => {\n  userService.logout();\n  this.setState({ user: null, diary: null });\n}\n\nhandleSignupOrLogin = () => {\n  this.setState({user: userService.getUser()});\n}\n\nloadDiaries = async() => {\n  if(!this.state.user) return\n  const diary = await diaryService.index();\n  this.setState({ diary });\n}\n\nupdateDiary = (diary) => {\n  this.setState({ diary })\n}\n\n  /*--- Lifecycle Methods ---*/\n\nasync componentDidMount() {\n  return this.loadDiaries();\n\n}\n\ncomponentDidUpdate () {\n  if(!this.state.diary){\n      return this.loadDiaries();\n  }\n}\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"\">\n          B E S T &nbsp;&nbsp;&nbsp; B U D Z\n        </header>\n        <NavBar\n          user={this.state.user}\n          handleLogout={this.handleLogout}\n        />\n        <Switch>\n          <Route exact path='/' render={props => \n            <LandingPage\n              {...props}\n              user={this.state.user}\n            />\n          }/>\n          <Route exact path='/dank-diary' render={props =>\n            this.state.user ? \n            <DiaryPage\n              {...props}\n              user={this.state.user}\n              diary={this.state.diary}\n              updateDiary={this.updateDiary}\n            />\n            :\n            <Redirect to ='/login' />\n          }/>\n          <Route exact path='/signup' render={({ history }) =>\n            <SignupPage\n              history={history}\n              handleSignup={this.handleSignupOrLogin}\n              user={this.state.user}\n              updateDiary={this.updateDiary}\n            />\n          }/>\n          <Route exact path='/login' render={({ history }) =>\n            <LoginPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          }/>\n          <Route exact path='/entry-form' render={({history}) => (\n            this.state.user ?\n            <EntryFormPage \n            history={history} \n            updateDiary={this.updateDiary}\n            />\n            :\n            <Redirect to ='/login' />\n          )}/>\n          <Route exact path='/edit/:id' render={props => \n            this.state.user ?\n            <UpdatePage \n            {...props}\n            user={this.state.user}\n            updateDiary={this.updateDiary}\n            />\n            :\n            <Redirect to ='/login' />\n          }/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router><App /></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}